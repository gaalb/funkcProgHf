defmodule Khf3Testcases do

  testcases = # %{key => {{puzzle, constraints}, solutions}}
    %{
       0 =>
       {{{3, 2, 7}, []},
         [
           [0, 1, 2, 1, 2, 1, 2],
           [1, 0, 2, 1, 2, 1, 2],
           [1, 2, 0, 1, 2, 1, 2],
           [1, 2, 1, 0, 2, 1, 2],
           [1, 2, 1, 2, 0, 1, 2],
           [1, 2, 1, 2, 1, 0, 2],
           [1, 2, 1, 2, 1, 2, 0],
         ]
       },
       1 => {{{3, 2, 7}, [{4, 0}]},
         [[1, 2, 1, 0, 2, 1, 2]]
       },
       2 => {{{3, 2, 12}, [{2, 1}, {6, 2}, {10, 1}, {12, 2}]},
         [
           [0, 1, 0, 0, 0, 2, 0, 1, 2, 1, 0, 2],
           [0, 1, 0, 0, 0, 2, 1, 0, 2, 1, 0, 2],
           [0, 1, 0, 0, 0, 2, 1, 2, 0, 1, 0, 2],
           [0, 1, 0, 2, 1, 2, 0, 0, 0, 1, 0, 2],
           [0, 1, 2, 0, 1, 2, 0, 0, 0, 1, 0, 2],
           [0, 1, 2, 1, 0, 2, 0, 0, 0, 1, 0, 2],
         ]
       },
       3 => {{{4, 6, 36}, [{5, 5}, {10, 0}, {13, 6}, {15, 1}, {19, 5}, {21, 0}, {23, 2}, {25, 3}, {27, 4}, {29, 6}, {33, 0}]},
         [
           [1, 2, 3, 4, 5, 0, 0, 0, 0, 0, 0, 0, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 0, 3, 0, 4, 5, 6, 1, 2, 3, 0, 4, 5, 6],
           [1, 2, 3, 4, 5, 6, 1, 2, 3, 0, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 0, 3, 0, 4, 5, 6, 0, 0, 0, 0, 0, 0, 0],
         ]
       },
       4 => {{{7, 5, 37}, [{1, 0}, {2, 0}]},
          [
            [0, 0, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5]
          ]
       },
       5 => {{{8, 5, 47}, [{39, 4}, {43, 5}]},
          [
            [1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 0, 0, 0, 5, 0, 0, 0, 0]
          ]
       },
       6 => {{{3, 12, 36}, [{1, 1}, {19, 7}, {36, 12}]},
         [
           [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
         ]
       },
      7 => {{{2, 15, 40}, [{1, 1}, {30, 15}]},
        [
          [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        ]
       },
      8 => {{{15, 12, 189}, [{10,1},{69,12}]},
	[
	  [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4,
	   5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4,
	   5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4,
	   5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4,
	   5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4,
	   5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4,
	   5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4,
	   5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
	]
       },
      9 => {{{17, 17, 291}, [{4,2}]},
	[
          [0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4,
           5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
           11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
           15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2,
           3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8,
           9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
           14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1,
           2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7,
           8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
           17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5,
           6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
           11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
           15, 16, 17],
          [0, 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4,
           5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
           11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
           15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2,
           3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8,
           9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
           14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1,
           2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7,
           8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
           17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5,
           6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
           11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
           15, 16, 17],
          [1, 0, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4,
           5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
           11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
           15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2,
           3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8,
           9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
           14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1,
           2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7,
           8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
           17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5,
           6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
           11, 12, 13, 14, 15, 16, 17, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
           15, 16, 17],
        ]
       },
       10 => {{{2, 3, 12}, [{1, 1}, {4, 1}, {10, 1}, {12, 3}]},
        []
       },
       11 => {{{2, 2, 15}, [{4,1},{8,2},{12,2}]},
        [
          [0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 1, 2, 0, 0, 0],
          [0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 0, 2, 0, 0, 0],
          [0, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 0],
        ]
       },
       12 => {{{5, 3, 20}, [{4, 1}, {8, 2}, {10, 3}, {11, 1}, {15, 2}, {17, 3}, {19, 2}]},
        [
          [0, 0, 0, 1, 2, 3, 1, 2, 0, 3, 1, 2, 3, 1, 2, 0, 3, 1, 2, 3],
          [1, 2, 3, 1, 0, 0, 0, 2, 0, 3, 1, 2, 3, 1, 2, 0, 3, 1, 2, 3],
          [1, 2, 3, 1, 2, 3, 1, 2, 0, 3, 1, 0, 0, 0, 2, 0, 3, 1, 2, 3],
        ]
       },
       13 => {{{5, 3, 20}, [{4, 1}, {8, 2}, {10, 3}, {11, 1}, {15, 2}, {17, 3}, {20, 2}]},
        []
       },
       14 => {{{5, 3, 20}, [{4, 1}, {8, 2}, {10, 3}, {11, 1}, {15, 2}, {17, 3}, {20, 3}]},
        [
          [0, 0, 0, 1, 2, 3, 1, 2, 0, 3, 1, 2, 3, 1, 2, 0, 3, 1, 2, 3],
          [1, 2, 3, 1, 0, 0, 0, 2, 0, 3, 1, 2, 3, 1, 2, 0, 3, 1, 2, 3],
          [1, 2, 3, 1, 2, 3, 1, 2, 0, 3, 1, 0, 0, 0, 2, 0, 3, 1, 2, 3],
        ]
       },
       15 => {{{3, 3, 15}, [{4, 1}, {8, 2}, {10, 3}, {11, 1}, {15, 3}]},
        [
          [0, 0, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 0, 2, 3],
          [0, 0, 0, 1, 2, 3, 1, 2, 0, 3, 1, 0, 2, 0, 3],
          [0, 0, 0, 1, 2, 3, 1, 2, 0, 3, 1, 2, 0, 0, 3],
          [1, 2, 3, 1, 0, 0, 0, 2, 0, 3, 1, 0, 0, 2, 3],
          [1, 2, 3, 1, 0, 0, 0, 2, 0, 3, 1, 0, 2, 0, 3],
          [1, 2, 3, 1, 0, 0, 0, 2, 0, 3, 1, 2, 0, 0, 3],
        ]
       }
    }
  for i <- 0..map_size(testcases)-1
    do
    {{puzzle, constrains}, solution} = testcases[i]
    {"Test case #{i}",
     (Khf3.cyclists(puzzle, constrains) |> Enum.sort()) === solution
    }
    |> IO.inspect()
  end

end
